// Pipeline version: v1.1.4
pipeline {
    agent { label 'jenkins-jenkins-agent' }

    environment {
        IMAGE_NAME      = "d4rkghost47/gitops-api-sec"
        REGISTRY        = "https://index.docker.io/v1/"
        SHORT_SHA       = "${GIT_COMMIT[0..7]}"
        SONAR_PROJECT   = "gitops-api-sec"
        SONAR_SOURCE    = "src"
        SONAR_HOST      = "http://sonarqube-sonarqube.sonarqube.svc.cluster.local:9000"
        TRIVY_HOST      = "http://trivy.trivy-system.svc.cluster.local:4954"
        TZ              = "America/Guatemala"  
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    checkout([$class: 'GitSCM', branches: [[name: '*/main']],
                            extensions: [[$class: 'CleanBeforeCheckout']],
                            userRemoteConfigs: [[url: 'https://github.com/evil-cloud/kcd-rollout-app.git']]])
                }
            }
        }

        stage('Test and Analysis') {
            parallel {
                stage('Static Code Analysis') {
                    steps {
                        withCredentials([string(credentialsId: 'sonar-token', variable: 'SONAR_TOKEN')]) {
                            script {
                                sh '''
                                sonar-scanner \\
                                    -Dsonar.projectKey=${SONAR_PROJECT} \\
                                    -Dsonar.sources=${SONAR_SOURCE} \\
                                    -Dsonar.host.url=${SONAR_HOST} \\
                                    -Dsonar.login=$SONAR_TOKEN
                                '''
                            }
                        }
                    }
                }

                stage('Unit Tests') {
                    steps {
                        container('dind') {
                            script {
                                sh '''
                                docker build -t gitops-api-sec-tests -f Dockerfile.test .
                                docker run --rm gitops-api-sec-tests
                                '''
                            }
                        }
                    }
                }
            }
        }

        stage('Build Image and Scan') {
            steps {
                container('dind') {
                    script {
                        sh '''
			            export DOCKER_BUILDKIT=1
                        docker build -f Dockerfile.pipeline -t ${IMAGE_NAME}:${SHORT_SHA} .

                        docker run aquasec/trivy image --server ${TRIVY_HOST} ${IMAGE_NAME}:${SHORT_SHA} --severity HIGH,CRITICAL --quiet
                        '''
                    }
                }
            }
        }
    }
}
